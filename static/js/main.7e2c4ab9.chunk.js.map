{"version":3,"sources":["../node_modules/@stencil/core/internal/client lazy /^/.*$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/@ionic/core/node_modules/@stencil/core/internal/client lazy /^/.*$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/@ionic/react/node_modules/ionicons/dist/esm-es5 lazy /^/.*/.entry/.js$/ groupOptions: {} namespace object","enums/actionType.ts","enums/globalStateIdentifier.ts","hooks/websocketHooks.ts","enums/modeType.ts","hooks/globalState.ts","components/Header.tsx","pages/Settings.tsx","components/DinoSlide.tsx","components/DinoSlides.tsx","pages/Dino.tsx","components/Greeting.tsx","components/Menu.tsx","App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackAsyncContext","__webpack_require__","o","ids","Object","ACTION_TYPE","GLOBAL_STATE_IDENTIFIER","WebsocketHandler","this","_websocket","token","localStorage","getItem","TOKEN","replace","WebSocket","console","log","onopen","send","JSON","stringify","origin","myOrigin","type","INTRODUCTION","args","name","USERNAME","onerror","evt","onclose","ev","undefined","onmessage","msg","data","parse","introduction","toLowerCase","triggerListenersByType","SET_STATE","newState","currentState","document","dispatchEvent","CustomEvent","AVAILABLE_MODES","detail","availableModes","currentModeTypes","mode","possibleModes","filter","includes","SET_MODE","ERROR","message","warn","actionListeners","listener","actionType","forEach","websocket","Math","max","listenerId","random","toString","MODE_TYPE","useWebsocket","useState","window","value","setValue","useEffect","addListener","v","removeListener","address","useGlobalState","identifier","defaultValue","addEventListener","removeEventListener","setItem","event","Header","title","action","setActionArgs","username","slot","className","onClick","icon","power","Page","useParams","setUsername","setToken","position","onIonChange","DinoSlide","m","setMode","params","setParams","key","description","paramId","param","NUMBER","onChange","val","current","target","renderParam","newMode","reduce","prev","DinoSlides","modes","spaceBetween","loop","navigation","pagination","SwiperCore","use","Navigation","Pagination","style","textAlign","Greeting","toastVisible","setToastVisible","setTimeout","isOpen","color","appPages","url","iosIcon","homeOutline","mdIcon","homeSharp","cogOutline","cogSharp","Menu","location","useLocation","contentId","side","appPage","index","autoHide","pathname","routerLink","routerDirection","lines","ios","md","setupIonicReact","App","path","exact","Dino","Settings","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","href","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.7e2c4ab9.chunk.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 60;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 61;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t88,\n\t\t12\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 62;\nmodule.exports = webpackAsyncContext;","enum ACTION_TYPE {\r\n\tSET_MODE = 'SET_MODE',\r\n\tSET_STATE = 'SET_STATE',\r\n\tINTRODUCTION = 'INTRODUCTION',\r\n\tERROR = 'ERROR',\r\n\tREQUEST_PREVIEW = 'REQUEST_PREVIEW',\r\n\tSTREAM = 'STREAM'\r\n}\r\n\r\nexport default ACTION_TYPE;\r\n","enum GLOBAL_STATE_IDENTIFIER {\r\n\tUSERNAME = 'USERNAME',\r\n\tTOKEN = 'TOKEN',\r\n\tERROR = 'ERROR',\r\n\tAVAILABLE_MODES = 'AVAILABLE_MODES'\r\n}\r\n\r\nexport default GLOBAL_STATE_IDENTIFIER;\r\n","import ACTION_TYPE from '../enums/actionType';\r\nimport Action from '../types/action';\r\nimport { useEffect, useState } from 'react';\r\nimport IntroductionAction from '../types/introductionAction';\r\nimport GLOBAL_STATE_IDENTIFIER from '../enums/globalStateIdentifier';\r\nimport Mode from '../types/mode';\r\n\r\nexport default class WebsocketHandler {\r\n\tpublic static introduction?: IntroductionAction;\r\n\tprivate static _websocket?: WebSocket;\r\n\tpublic static myOrigin = Math.random().toString().replace(/^../, '');\r\n\t\r\n\tpublic static get websocket(): WebSocket {\r\n\t\tif (!this._websocket) {\r\n\t\t\tconst token = localStorage.getItem(GLOBAL_STATE_IDENTIFIER.TOKEN)?.replace(/[^a-z0-9-]/gmi, '');\r\n\t\t\tthis._websocket = new WebSocket('wss://dino.petrusbellmonte.de', [ token ?? 'no-token', 'dino' ]);\r\n\t\t\tconsole.log(token);\r\n\t\t\tthis._websocket.onopen = () => {\r\n\t\t\t\tconsole.log('socket opened...');\r\n\t\t\t\tthis._websocket?.send(JSON.stringify({\r\n\t\t\t\t\torigin: this.myOrigin,\r\n\t\t\t\t\ttype: ACTION_TYPE.INTRODUCTION,\r\n\t\t\t\t\targs: {\r\n\t\t\t\t\t\tname: localStorage.getItem(GLOBAL_STATE_IDENTIFIER.USERNAME),\r\n\t\t\t\t\t\ttype: 'APP'\r\n\t\t\t\t\t}\r\n\t\t\t\t} as IntroductionAction));\r\n\t\t\t};\r\n\t\t\tthis._websocket.onerror = (evt) => {\r\n\t\t\t\tconsole.log(evt);\r\n\t\t\t};\r\n\t\t\tthis._websocket.onclose = ev => {\r\n\t\t\t\tthis._websocket = undefined;\r\n\t\t\t};\r\n\t\t\tthis._websocket.onmessage = (msg) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst data: Action = JSON.parse(msg.data);\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\tswitch (data.type) {\r\n\t\t\t\t\t\tcase ACTION_TYPE.INTRODUCTION:\r\n\t\t\t\t\t\t\tconst introduction = data as IntroductionAction;\r\n\t\t\t\t\t\t\tif (introduction.origin.toLowerCase() === 'server') {\r\n\t\t\t\t\t\t\t\tthis.introduction = introduction;\r\n\t\t\t\t\t\t\t\tthis.triggerListenersByType({ ...data, type: ACTION_TYPE.SET_STATE, args: { newState: data.args.currentState } });\r\n\t\t\t\t\t\t\t\tdocument.dispatchEvent(new CustomEvent<Mode[]>(GLOBAL_STATE_IDENTIFIER.AVAILABLE_MODES, { detail: this.introduction.args.availableModes }));\r\n\t\t\t\t\t\t\t} else if (this.introduction) {\r\n\t\t\t\t\t\t\t\tconsole.log('wtf');\r\n\t\t\t\t\t\t\t\tconst currentModeTypes = this.introduction.args.availableModes.map(mode => mode.type);\r\n\t\t\t\t\t\t\t\tthis.introduction.args.availableModes = [ ...this.introduction.args.availableModes, ...(introduction.args.availableModes ?? introduction.args.possibleModes ?? []).filter(mode => !currentModeTypes.includes(mode.type)) ];\r\n\t\t\t\t\t\t\t\tconsole.log(`updating available modes... Now: ${ JSON.stringify(this.introduction.args.availableModes) }`);\r\n\t\t\t\t\t\t\t\tdocument.dispatchEvent(new CustomEvent<Mode[]>(GLOBAL_STATE_IDENTIFIER.AVAILABLE_MODES, { detail: this.introduction.args.availableModes }));\r\n\t\t\t\t\t\t\t\tthis.triggerListenersByType(data);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.log('weird shit');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ACTION_TYPE.SET_MODE:\r\n\t\t\t\t\t\tcase ACTION_TYPE.SET_STATE:\r\n\t\t\t\t\t\t\tthis.triggerListenersByType(data);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ACTION_TYPE.ERROR:\r\n\t\t\t\t\t\t\t// noinspection ExceptionCaughtLocallyJS\r\n\t\t\t\t\t\t\tthrow new Error(data.args.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole.warn(e);\r\n\t\t\t\t\tdocument.dispatchEvent(new CustomEvent<string>(GLOBAL_STATE_IDENTIFIER.ERROR, { detail: e.msg }));\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn this._websocket;\r\n\t}\r\n\t\r\n\tprivate static actionListeners: { id: number, actionType: ACTION_TYPE, listener: (action: Action) => any }[] = [];\r\n\t\r\n\tprivate static triggerListenersByType(data: Action) {\r\n\t\tthis.actionListeners\r\n\t\t\t.filter(listener => listener.actionType === data.type)\r\n\t\t\t.forEach(listener => listener.listener(data));\r\n\t}\r\n\t\r\n\tpublic static addListener(actionType: ACTION_TYPE, listener: (action: Action) => any): number {\r\n\t\tconst socket = this.websocket;\r\n\t\tconst id = Math.max(...this.actionListeners.map(listener => listener.id)) + 1;\r\n\t\tthis.actionListeners = [ ...this.actionListeners, { id, actionType, listener } ];\r\n\t\treturn id;\r\n\t}\r\n\t\r\n\tpublic static removeListener(listenerId: number) {\r\n\t\tthis.actionListeners = this.actionListeners.filter(listener => listener.id !== listenerId);\r\n\t}\r\n}\r\n\r\nexport const useWebsocket = <T>(actionType: ACTION_TYPE): [ T | null, (args: any) => void ] => {\r\n\tconst [ value, setValue ] = useState<Action | null>((window as any)[`LAST_${ actionType }`] as Action ?? null);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst listenerId = WebsocketHandler.addListener(actionType, v => {\r\n\t\t\t(window as any)[`LAST_${ actionType }`] = v;\r\n\t\t\tsetValue(v);\r\n\t\t});\r\n\t\treturn () => {\r\n\t\t\tWebsocketHandler.removeListener(listenerId);\r\n\t\t};\r\n\t}, [ actionType ]);\r\n\t\r\n\tconst setActionArgs = (args: any, address = 'ALL') => {\r\n\t\tWebsocketHandler.websocket.send(JSON.stringify({ origin: WebsocketHandler.myOrigin, type: actionType, address, args } as unknown as Action));\r\n\t};\r\n\t\r\n\treturn [ value as T | null, setActionArgs ];\r\n};\r\n","enum MODE_TYPE {\r\n\tCOLOR = 'COLOR',\r\n\tNUMBER = 'NUMBER'\r\n}\r\n\r\nexport default MODE_TYPE;\r\n","import { useEffect, useState } from 'react';\r\nimport GLOBAL_STATE_IDENTIFIER from '../enums/globalStateIdentifier';\r\n\r\nconst useGlobalState = <T>(identifier: GLOBAL_STATE_IDENTIFIER, defaultValue?: any): [ T, (newState: T) => void ] => {\r\n\tconst [ value, setValue ] = useState<T>(JSON.parse(localStorage.getItem(identifier) ?? 'null') ?? defaultValue);\r\n\t\r\n\tconst customSetState = (newState: T) => {\r\n\t\tlocalStorage.setItem(identifier, JSON.stringify(newState));\r\n\t\tconst event = new CustomEvent<T>(identifier, { detail: newState });\r\n\t\tdocument.dispatchEvent(event);\r\n\t};\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst listener=(evt: any)=> {\r\n\t\t\tsetValue((evt as CustomEvent).detail);\r\n\t\t\tconsole.log('update modes' + JSON.stringify((evt as CustomEvent).detail));\r\n\t\t}\r\n\t\t\r\n\t\tdocument.addEventListener(identifier, listener);\r\n\t\treturn () => document.removeEventListener(identifier, listener);\r\n\t}, []);\r\n\t\r\n\treturn [ value, customSetState ];\r\n};\r\n\r\nexport default useGlobalState;\r\n","import { IonButton, IonButtons, IonHeader, IonIcon, IonMenuButton, IonTitle, IonToolbar } from '@ionic/react';\r\nimport { power } from 'ionicons/icons';\r\nimport React from 'react';\r\nimport { useWebsocket } from '../hooks/websocketHooks';\r\nimport ACTION_TYPE from '../enums/actionType';\r\nimport useGlobalState from '../hooks/globalState';\r\nimport GLOBAL_STATE_IDENTIFIER from '../enums/globalStateIdentifier';\r\nimport SetStateAction from '../types/setStateAction';\r\nimport './Header.scss';\r\n\r\ninterface Props {\r\n\ttitle: string;\r\n}\r\n\r\nconst Header: React.FC<Props> = ({ title }) => {\r\n\tconst [ action, setActionArgs ] = useWebsocket<SetStateAction>(ACTION_TYPE.SET_STATE);\r\n\tconst [ username ] = useGlobalState<string>(GLOBAL_STATE_IDENTIFIER.USERNAME);\r\n\t\r\n\treturn <IonHeader>\r\n\t\t<IonToolbar>\r\n\t\t\t<IonButtons slot='start'>\r\n\t\t\t\t<IonButton className={ action?.args.newState ? 'active' : 'inactive' } onClick={ () => setActionArgs({ newState: !action?.args.newState }) }>\r\n\t\t\t\t\t<IonIcon slot='icon-only' icon={ power }/>\r\n\t\t\t\t</IonButton>\r\n\t\t\t</IonButtons>\r\n\t\t\t<IonTitle>{ title }, { username }</IonTitle>\r\n\t\t\t<IonButtons slot='end'>\r\n\t\t\t\t<IonMenuButton/>\r\n\t\t\t</IonButtons>\r\n\t\t</IonToolbar>\r\n\t</IonHeader>;\r\n};\r\n\r\nexport default Header;\r\n","import { IonContent, IonInput, IonItem, IonLabel, IonList, IonPage } from '@ionic/react';\r\nimport { useParams } from 'react-router';\r\nimport './Page.scss';\r\nimport Header from '../components/Header';\r\nimport React from 'react';\r\nimport useGlobalState from '../hooks/globalState';\r\nimport GLOBAL_STATE_IDENTIFIER from '../enums/globalStateIdentifier';\r\n\r\nconst Page: React.FC = () => {\r\n\t\r\n\tconst { name } = useParams<{ name: string; }>();\r\n\tconst [ username, setUsername ] = useGlobalState<string>(GLOBAL_STATE_IDENTIFIER.USERNAME, '');\r\n\tconst [ token, setToken ] = useGlobalState<string>(GLOBAL_STATE_IDENTIFIER.TOKEN, '');\r\n\treturn (\r\n\t\t<IonPage>\r\n\t\t\t<Header title='Settings'/>\r\n\t\t\t\r\n\t\t\t<IonContent>\r\n\t\t\t\t<p>This is the settings page!</p>\r\n\t\t\t\t<IonList>\r\n\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t<IonLabel position='floating'>Username</IonLabel>\r\n\t\t\t\t\t\t<IonInput name='username' value={ username } onIonChange={ evt => setUsername(evt.detail.value ?? '') }/>\r\n\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t<IonLabel position='floating'>Token</IonLabel>\r\n\t\t\t\t\t\t<IonInput type='password' name='token' value={ token } onIonChange={ evt => setToken(evt.detail.value ?? '') }/>\r\n\t\t\t\t\t</IonItem>\r\n\t\t\t\t</IonList>\r\n\t\t\t</IonContent>\r\n\t\t</IonPage>\r\n\t);\r\n};\r\n\r\nexport default Page;\r\n","import { IonButton, IonItem, IonLabel } from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Mode, { ModeParam } from '../types/mode';\r\n\r\nimport 'swiper/swiper-bundle.min.css';\r\nimport 'swiper/swiper.min.css';\r\nimport './DinoSlides.scss';\r\nimport { useWebsocket } from '../hooks/websocketHooks';\r\nimport ACTION_TYPE from '../enums/actionType';\r\nimport MODE_TYPE from '../enums/modeType';\r\n\r\n\r\nexport const DinoSlide: React.FC<{ mode: Mode }> = ({ mode: m }) => {\r\n\tconst [ _, setMode ] = useWebsocket<Mode>(ACTION_TYPE.SET_MODE);\r\n\tconst [ params, setParams ] = useState<[ string, ModeParam ][]>([]);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tsetParams(Object.keys(m.params).map(key => [ key, m.params[key] ]));\r\n\t}, [ m ]);\r\n\t\r\n\tconst renderParam = (paramId: string, param: ModeParam) => {\r\n\t\treturn (\r\n\t\t\t<IonItem key={ paramId }>\r\n\t\t\t\t<IonLabel>{ param.name }</IonLabel>\r\n\t\t\t\t<input type={ param.type === MODE_TYPE.NUMBER ? 'number' : 'color' } value={ param.value ?? param.defaultValue } onChange={ val => {\r\n\t\t\t\t\tsetParams(current => current.map(([ key, param ]) => key === paramId ? [ key, { ...param, value: val.target.value } ] : [ key, param ]));\r\n\t\t\t\t} }/>\r\n\t\t\t</IonItem>\r\n\t\t);\r\n\t};\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>{ m.name }</h1>\r\n\t\t\t<p>{ m.description }</p>\r\n\t\t\t{ params.map(([ key, param ]) => renderParam(key, param)) }\r\n\t\t\t<IonButton onClick={ () => setMode({ newMode: { ...m, params: params.reduce((prev: any, [ key, value ]) => prev[key] = value, {}) } }) }>Apply</IonButton>\r\n\t\t</>\r\n\t);\r\n};\r\n","import { IonButton, IonItem, IonLabel } from '@ionic/react';\r\nimport React from 'react';\r\nimport useGlobalState from '../hooks/globalState';\r\nimport Mode, { ModeParam } from '../types/mode';\r\nimport GLOBAL_STATE_IDENTIFIER from '../enums/globalStateIdentifier';\r\n\r\nimport { Swiper, SwiperSlide } from 'swiper/react/swiper-react';\r\nimport SwiperCore, { Navigation, Pagination } from 'swiper';\r\n\r\nimport 'swiper/swiper-bundle.min.css';\r\nimport 'swiper/swiper.min.css';\r\nimport './DinoSlides.scss';\r\nimport { useWebsocket } from '../hooks/websocketHooks';\r\nimport ACTION_TYPE from '../enums/actionType';\r\nimport MODE_TYPE from '../enums/modeType';\r\nimport { DinoSlide } from './DinoSlide';\r\n\r\nSwiperCore.use([ Navigation, Pagination ]);\r\n\r\nexport function DinoSlides() {\r\n\tconst [ modes ] = useGlobalState<Mode[]>(GLOBAL_STATE_IDENTIFIER.AVAILABLE_MODES);\r\n\tconst [ mode, setMode ] = useWebsocket<Mode>(ACTION_TYPE.SET_MODE);\r\n\t\r\n\tconst renderParam = (paramId: string, param: ModeParam) => {\r\n\t\treturn (\r\n\t\t\t<IonItem key={ paramId }>\r\n\t\t\t\t<IonLabel>{ param.name }</IonLabel>\r\n\t\t\t\t<input type={ param.type === MODE_TYPE.NUMBER ? 'number' : 'color' } value={ param.value ?? param.defaultValue }/>\r\n\t\t\t</IonItem>\r\n\t\t);\r\n\t};\r\n\t\r\n\tconst getSlideFromMode = (m: Mode) =>\r\n\t\t(<SwiperSlide key={ m.type }>\r\n\t\t\t<h1>{ m.name }</h1>\r\n\t\t\t<p>{ m.description }</p>\r\n\t\t\t{ Object.keys(m.params).map(key => renderParam(key, m.params[key])) }\r\n\t\t\t<IonButton onClick={ () => setMode({ newMode: m }) }>Apply</IonButton>\r\n\t\t</SwiperSlide>);\r\n\t\r\n\treturn (\r\n\t\t<Swiper\r\n\t\t\tspaceBetween={ 50 }\r\n\t\t\tloop\r\n\t\t\tnavigation\r\n\t\t\tpagination\r\n\t\t\tid='dino-slides'\r\n\t\t>\r\n\t\t\t{ modes?.map(m => <SwiperSlide key={ m.type }><DinoSlide key={ m.type } mode={ m }/></SwiperSlide>) }\r\n\t\t</Swiper>\r\n\t);\r\n}\r\n","import { IonContent, IonPage } from '@ionic/react';\r\nimport './Page.scss';\r\nimport Header from '../components/Header';\r\nimport React from 'react';\r\nimport DinoCanvas from '../components/DinoCanvas';\r\nimport { DinoSlides } from '../components/DinoSlides';\r\n\r\n// Optional parameters to pass to the swiper instance.\r\n// See http://idangero.us/swiper/api/ for valid options.\r\nconst slideOpts = {\r\n\tspeed: 400,\r\n\tloop: true\r\n};\r\n\r\nconst Page: React.FC = () => {\r\n\t\r\n\treturn (\r\n\t\t<IonPage>\r\n\t\t\t<Header title='Dino 🦕'/>\r\n\t\t\t\r\n\t\t\t<IonContent>\r\n\t\t\t\t{/*<DinoCanvas/>*/}\r\n\t\t\t\t<h1 style={ { textAlign: 'center' } }>Mein geiler Dino!</h1>\r\n\t\t\t\t<DinoSlides/>\r\n\t\t\t</IonContent>\r\n\t\t</IonPage>\r\n\t);\r\n};\r\n\r\nexport default Page;\r\n","import { IonToast } from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useWebsocket } from '../hooks/websocketHooks';\r\nimport ACTION_TYPE from '../enums/actionType';\r\nimport './Header.scss';\r\nimport IntroductionAction from '../types/introductionAction';\r\n\r\ninterface Props {\r\n}\r\n\r\nconst Greeting: React.FC<Props> = () => {\r\n\tconst [ action ] = useWebsocket<IntroductionAction>(ACTION_TYPE.INTRODUCTION);\r\n\tconst [ toastVisible, setToastVisible ] = useState<string>();\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (action?.origin /*&& action.origin.toLowerCase() !== 'server'*/) {\r\n\t\t\tsetToastVisible(`${ action?.args.name ?? 'A new device' } connected!`);\r\n\t\t\t\r\n\t\t\tsetTimeout(() => setToastVisible(undefined), 4000);\r\n\t\t}\r\n\t}, [ action ]);\r\n\t\r\n\treturn <IonToast isOpen={ !!toastVisible } color='success' message={ toastVisible }/>;\r\n};\r\n\r\nexport default Greeting;\r\n","import { IonContent, IonIcon, IonItem, IonLabel, IonList, IonListHeader, IonMenu, IonMenuToggle, IonNote } from '@ionic/react';\r\n\r\nimport { useLocation } from 'react-router-dom';\r\nimport { bookmarkOutline, cogOutline, cogSharp, homeOutline, homeSharp } from 'ionicons/icons';\r\nimport './Menu.scss';\r\n\r\ninterface AppPage {\r\n\turl: string;\r\n\tiosIcon: string;\r\n\tmdIcon: string;\r\n\ttitle: string;\r\n}\r\n\r\nconst appPages: AppPage[] = [\r\n\t{\r\n\t\ttitle: 'Manage Dinos',\r\n\t\turl: '/',\r\n\t\tiosIcon: homeOutline,\r\n\t\tmdIcon: homeSharp\r\n\t},\r\n\t{\r\n\t\ttitle: 'Settings',\r\n\t\turl: '/Settings',\r\n\t\tiosIcon: cogOutline,\r\n\t\tmdIcon: cogSharp\r\n\t}\r\n];\r\n\r\nconst Menu: React.FC = () => {\r\n\tconst location = useLocation();\r\n\t\r\n\treturn (\r\n\t\t<IonMenu contentId='main' type='reveal' side='end'>\r\n\t\t\t<IonContent>\r\n\t\t\t\t<IonList id='menu-list'>\r\n\t\t\t\t\t<IonListHeader>DinoAPP</IonListHeader>\r\n\t\t\t\t\t<IonNote>Control your dinos from everywhere 🎉</IonNote>\r\n\t\t\t\t\t{ appPages.map((appPage, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<IonMenuToggle key={ index } autoHide={ false }>\r\n\t\t\t\t\t\t\t\t<IonItem className={ location.pathname === appPage.url ? 'selected' : '' } routerLink={ appPage.url } routerDirection='none' lines='none' detail={ false }>\r\n\t\t\t\t\t\t\t\t\t<IonIcon slot='start' ios={ appPage.iosIcon } md={ appPage.mdIcon }/>\r\n\t\t\t\t\t\t\t\t\t<IonLabel>{ appPage.title }</IonLabel>\r\n\t\t\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t\t\t</IonMenuToggle>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}) }\r\n\t\t\t\t</IonList>\r\n\t\t\t</IonContent>\r\n\t\t</IonMenu>\r\n\t);\r\n};\r\n\r\nexport default Menu;\r\n","import { IonApp, IonRouterOutlet, IonSplitPane, setupIonicReact } from '@ionic/react';\r\nimport { IonReactRouter } from '@ionic/react-router';\r\nimport { Route } from 'react-router-dom';\r\nimport Settings from './pages/Settings';\r\nimport Dino from './pages/Dino';\r\nimport Greeting from './components/Greeting';\r\nimport React from 'react';\r\nimport Menu from './components/Menu';\r\n\r\n/* Core CSS required for Ionic components to work properly */\r\nimport '@ionic/react/css/core.css';\r\n\r\n/* Basic CSS for apps built with Ionic */\r\nimport '@ionic/react/css/normalize.css';\r\nimport '@ionic/react/css/structure.css';\r\nimport '@ionic/react/css/typography.css';\r\n\r\n/* Optional CSS utils that can be commented out */\r\nimport '@ionic/react/css/padding.css';\r\nimport '@ionic/react/css/float-elements.css';\r\nimport '@ionic/react/css/text-alignment.css';\r\nimport '@ionic/react/css/text-transformation.css';\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '@ionic/react/css/display.css';\r\n\r\n/* Theme variables */\r\nimport './theme/variables.scss';\r\n\r\nsetupIonicReact({\r\n\r\n});\r\n\r\nconst App: React.FC = () => {\r\n\treturn (\r\n\t\t<IonApp>\r\n\t\t\t<IonReactRouter>\r\n\t\t\t\t<IonSplitPane contentId='main'>\r\n\t\t\t\t\t<Menu/>\r\n\t\t\t\t\t<IonRouterOutlet id='main'>\r\n\t\t\t\t\t\t<Route path='/' exact={ true }>\r\n\t\t\t\t\t\t\t<Dino/>\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path='/Settings' exact={ true }>\r\n\t\t\t\t\t\t\t<Settings/>\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</IonRouterOutlet>\r\n\t\t\t\t</IonSplitPane>\r\n\t\t\t</IonReactRouter>\r\n\t\t\t<Greeting/>\r\n\t\t</IonApp>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n"],"sourceRoot":""}