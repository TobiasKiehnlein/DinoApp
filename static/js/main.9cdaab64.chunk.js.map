{"version":3,"sources":["enums/actionType.ts","enums/globalStateIdentifier.ts","hooks/websocketHooks.ts","hooks/globalState.ts","components/Header.tsx","pages/Settings.tsx","components/DinoCanvas.tsx","enums/modeType.ts","components/DinoSlide.tsx","components/DinoSlides.tsx","pages/Dino.tsx","components/Greeting.tsx","components/Menu.tsx","App.tsx","serviceWorkerRegistration.ts","index.tsx","../node_modules/@stencil/core/internal/client lazy /^/.*$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/@ionic/core/node_modules/@stencil/core/internal/client lazy /^/.*$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","../node_modules/@ionic/react/node_modules/ionicons/dist/esm-es5 lazy /^/.*/.entry/.js$/ groupOptions: {} namespace object"],"names":["ACTION_TYPE","GLOBAL_STATE_IDENTIFIER","WebsocketHandler","this","_websocket","token","localStorage","getItem","TOKEN","replace","WebSocket","console","log","onopen","send","JSON","stringify","origin","myOrigin","type","INTRODUCTION","args","name","USERNAME","onerror","evt","onclose","ev","undefined","onmessage","msg","data","parse","introduction","toLowerCase","triggerListenersByType","SET_STATE","newState","currentState","document","dispatchEvent","CustomEvent","AVAILABLE_MODES","detail","availableModes","currentModeTypes","map","mode","possibleModes","filter","includes","SET_MODE","ERROR","Error","message","e","warn","actionListeners","listener","actionType","forEach","websocket","id","Math","max","listenerId","random","toString","useWebsocket","useState","window","value","setValue","useEffect","addListener","v","removeListener","address","useGlobalState","identifier","defaultValue","addEventListener","removeEventListener","setItem","event","Header","title","action","setActionArgs","username","slot","className","onClick","icon","power","Page","useParams","setUsername","setToken","position","onIonChange","Loader","progress","useProgress","Html","center","Dino","props","geom","useLoader","FBXLoader","ref","useRef","hover","scale","onPointerOver","onPointerOut","object","color","opacity","transparent","extend","EffectComposer","RenderPass","UnrealBloomPass","MODE_TYPE","Bloom","children","active","useThree","gl","camera","size","scene","setScene","composer","useFrame","current","render","attachArray","DinoCanvasContent","rotation","set","PI","DinoCanvas","style","height","linear","fallback","OrbitControls","autoRotate","enableZoom","enablePan","DinoSlide","m","setMode","params","setParams","Object","keys","key","description","paramId","param","NUMBER","onChange","val","target","renderParam","newMode","reduce","prev","DinoSlides","modes","spaceBetween","loop","navigation","pagination","SwiperCore","use","Navigation","Pagination","textAlign","Greeting","toastVisible","setToastVisible","setTimeout","isOpen","appPages","url","iosIcon","homeOutline","mdIcon","homeSharp","cogOutline","cogSharp","Menu","location","useLocation","contentId","side","appPage","index","autoHide","pathname","routerLink","routerDirection","lines","ios","md","setupIonicReact","App","path","exact","Settings","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","StrictMode","getElementById","URL","process","href","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","webpackEmptyAsyncContext","req","Promise","resolve","code","module","exports","webpackAsyncContext","__webpack_require__","o","ids"],"mappings":"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","file":"static/js/main.9cdaab64.chunk.js","sourcesContent":["enum ACTION_TYPE {\r\n\tSET_MODE = 'SET_MODE',\r\n\tSET_STATE = 'SET_STATE',\r\n\tINTRODUCTION = 'INTRODUCTION',\r\n\tERROR = 'ERROR',\r\n\tREQUEST_PREVIEW = 'REQUEST_PREVIEW',\r\n\tSTREAM = 'STREAM'\r\n}\r\n\r\nexport default ACTION_TYPE;\r\n","enum GLOBAL_STATE_IDENTIFIER {\r\n\tUSERNAME = 'USERNAME',\r\n\tTOKEN = 'TOKEN',\r\n\tERROR = 'ERROR',\r\n\tAVAILABLE_MODES = 'AVAILABLE_MODES'\r\n}\r\n\r\nexport default GLOBAL_STATE_IDENTIFIER;\r\n","import ACTION_TYPE from '../enums/actionType';\r\nimport Action from '../types/action';\r\nimport { useEffect, useState } from 'react';\r\nimport IntroductionAction from '../types/introductionAction';\r\nimport GLOBAL_STATE_IDENTIFIER from '../enums/globalStateIdentifier';\r\nimport Mode from '../types/mode';\r\n\r\nexport default class WebsocketHandler {\r\n\tpublic static introduction?: IntroductionAction;\r\n\tprivate static _websocket?: WebSocket;\r\n\tpublic static myOrigin = Math.random().toString().replace(/^../, '');\r\n\t\r\n\tpublic static get websocket(): WebSocket {\r\n\t\tif (!this._websocket) {\r\n\t\t\tconst token = localStorage.getItem(GLOBAL_STATE_IDENTIFIER.TOKEN)?.replace(/[^a-z0-9-]/gmi, '');\r\n\t\t\tthis._websocket = new WebSocket('wss://dino.petrusbellmonte.de', [ token ?? 'no-token', 'dino' ]);\r\n\t\t\tconsole.log(token);\r\n\t\t\tthis._websocket.onopen = () => {\r\n\t\t\t\tconsole.log('socket opened...');\r\n\t\t\t\tthis._websocket?.send(JSON.stringify({\r\n\t\t\t\t\torigin: this.myOrigin,\r\n\t\t\t\t\ttype: ACTION_TYPE.INTRODUCTION,\r\n\t\t\t\t\targs: {\r\n\t\t\t\t\t\tname: localStorage.getItem(GLOBAL_STATE_IDENTIFIER.USERNAME),\r\n\t\t\t\t\t\ttype: 'APP'\r\n\t\t\t\t\t}\r\n\t\t\t\t} as IntroductionAction));\r\n\t\t\t};\r\n\t\t\tthis._websocket.onerror = (evt) => {\r\n\t\t\t\tconsole.log(evt);\r\n\t\t\t};\r\n\t\t\tthis._websocket.onclose = ev => {\r\n\t\t\t\tthis._websocket = undefined;\r\n\t\t\t};\r\n\t\t\tthis._websocket.onmessage = (msg) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst data: Action = JSON.parse(msg.data);\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\tswitch (data.type) {\r\n\t\t\t\t\t\tcase ACTION_TYPE.INTRODUCTION:\r\n\t\t\t\t\t\t\tconst introduction = data as IntroductionAction;\r\n\t\t\t\t\t\t\tif (introduction.origin.toLowerCase() === 'server') {\r\n\t\t\t\t\t\t\t\tthis.introduction = introduction;\r\n\t\t\t\t\t\t\t\tthis.triggerListenersByType({ ...data, type: ACTION_TYPE.SET_STATE, args: { newState: data.args.currentState } });\r\n\t\t\t\t\t\t\t\tdocument.dispatchEvent(new CustomEvent<Mode[]>(GLOBAL_STATE_IDENTIFIER.AVAILABLE_MODES, { detail: this.introduction.args.availableModes }));\r\n\t\t\t\t\t\t\t} else if (this.introduction) {\r\n\t\t\t\t\t\t\t\tconsole.log('wtf');\r\n\t\t\t\t\t\t\t\tconst currentModeTypes = this.introduction.args.availableModes.map(mode => mode.type);\r\n\t\t\t\t\t\t\t\tthis.introduction.args.availableModes = [ ...this.introduction.args.availableModes, ...(introduction.args.availableModes ?? introduction.args.possibleModes ?? []).filter(mode => !currentModeTypes.includes(mode.type)) ];\r\n\t\t\t\t\t\t\t\tconsole.log(`updating available modes... Now: ${ JSON.stringify(this.introduction.args.availableModes) }`);\r\n\t\t\t\t\t\t\t\tdocument.dispatchEvent(new CustomEvent<Mode[]>(GLOBAL_STATE_IDENTIFIER.AVAILABLE_MODES, { detail: this.introduction.args.availableModes }));\r\n\t\t\t\t\t\t\t\tthis.triggerListenersByType(data);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.log('weird shit');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ACTION_TYPE.SET_MODE:\r\n\t\t\t\t\t\tcase ACTION_TYPE.SET_STATE:\r\n\t\t\t\t\t\t\tthis.triggerListenersByType(data);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ACTION_TYPE.ERROR:\r\n\t\t\t\t\t\t\t// noinspection ExceptionCaughtLocallyJS\r\n\t\t\t\t\t\t\tthrow new Error(data.args.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole.warn(e);\r\n\t\t\t\t\tdocument.dispatchEvent(new CustomEvent<string>(GLOBAL_STATE_IDENTIFIER.ERROR, { detail: e.msg }));\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn this._websocket;\r\n\t}\r\n\t\r\n\tprivate static actionListeners: { id: number, actionType: ACTION_TYPE, listener: (action: Action) => any }[] = [];\r\n\t\r\n\tprivate static triggerListenersByType(data: Action) {\r\n\t\tthis.actionListeners\r\n\t\t\t.filter(listener => listener.actionType === data.type)\r\n\t\t\t.forEach(listener => listener.listener(data));\r\n\t}\r\n\t\r\n\tpublic static addListener(actionType: ACTION_TYPE, listener: (action: Action) => any): number {\r\n\t\tconst socket = this.websocket;\r\n\t\tconst id = Math.max(...this.actionListeners.map(listener => listener.id)) + 1;\r\n\t\tthis.actionListeners = [ ...this.actionListeners, { id, actionType, listener } ];\r\n\t\treturn id;\r\n\t}\r\n\t\r\n\tpublic static removeListener(listenerId: number) {\r\n\t\tthis.actionListeners = this.actionListeners.filter(listener => listener.id !== listenerId);\r\n\t}\r\n}\r\n\r\nexport const useWebsocket = <T>(actionType: ACTION_TYPE): [ T | null, (args: any) => void ] => {\r\n\tconst [ value, setValue ] = useState<Action | null>((window as any)[`LAST_${ actionType }`] as Action ?? null);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst listenerId = WebsocketHandler.addListener(actionType, v => {\r\n\t\t\t(window as any)[`LAST_${ actionType }`] = v;\r\n\t\t\tsetValue(v);\r\n\t\t});\r\n\t\treturn () => {\r\n\t\t\tWebsocketHandler.removeListener(listenerId);\r\n\t\t};\r\n\t}, [ actionType ]);\r\n\t\r\n\tconst setActionArgs = (args: any, address = 'ALL') => {\r\n\t\tWebsocketHandler.websocket.send(JSON.stringify({ origin: WebsocketHandler.myOrigin, type: actionType, address, args } as unknown as Action));\r\n\t};\r\n\t\r\n\treturn [ value as T | null, setActionArgs ];\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport GLOBAL_STATE_IDENTIFIER from '../enums/globalStateIdentifier';\r\n\r\nconst useGlobalState = <T>(identifier: GLOBAL_STATE_IDENTIFIER, defaultValue?: any): [ T, (newState: T) => void ] => {\r\n\tconst [ value, setValue ] = useState<T>(JSON.parse(localStorage.getItem(identifier) ?? 'null') ?? defaultValue);\r\n\t\r\n\tconst customSetState = (newState: T) => {\r\n\t\tlocalStorage.setItem(identifier, JSON.stringify(newState));\r\n\t\tconst event = new CustomEvent<T>(identifier, { detail: newState });\r\n\t\tdocument.dispatchEvent(event);\r\n\t};\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst listener=(evt: any)=> {\r\n\t\t\tsetValue((evt as CustomEvent).detail);\r\n\t\t\tconsole.log('update modes' + JSON.stringify((evt as CustomEvent).detail));\r\n\t\t}\r\n\t\t\r\n\t\tdocument.addEventListener(identifier, listener);\r\n\t\treturn () => document.removeEventListener(identifier, listener);\r\n\t}, []);\r\n\t\r\n\treturn [ value, customSetState ];\r\n};\r\n\r\nexport default useGlobalState;\r\n","import { IonButton, IonButtons, IonHeader, IonIcon, IonMenuButton, IonTitle, IonToolbar } from '@ionic/react';\r\nimport { power } from 'ionicons/icons';\r\nimport React from 'react';\r\nimport { useWebsocket } from '../hooks/websocketHooks';\r\nimport ACTION_TYPE from '../enums/actionType';\r\nimport useGlobalState from '../hooks/globalState';\r\nimport GLOBAL_STATE_IDENTIFIER from '../enums/globalStateIdentifier';\r\nimport SetStateAction from '../types/setStateAction';\r\nimport './Header.scss';\r\n\r\ninterface Props {\r\n\ttitle: string;\r\n}\r\n\r\nconst Header: React.FC<Props> = ({ title }) => {\r\n\tconst [ action, setActionArgs ] = useWebsocket<SetStateAction>(ACTION_TYPE.SET_STATE);\r\n\tconst [ username ] = useGlobalState<string>(GLOBAL_STATE_IDENTIFIER.USERNAME);\r\n\t\r\n\treturn <IonHeader>\r\n\t\t<IonToolbar>\r\n\t\t\t<IonButtons slot='start'>\r\n\t\t\t\t<IonButton className={ action?.args.newState ? 'active' : 'inactive' } onClick={ () => setActionArgs({ newState: !action?.args.newState }) }>\r\n\t\t\t\t\t<IonIcon slot='icon-only' icon={ power }/>\r\n\t\t\t\t</IonButton>\r\n\t\t\t</IonButtons>\r\n\t\t\t<IonTitle>{ title }, { username }</IonTitle>\r\n\t\t\t<IonButtons slot='end'>\r\n\t\t\t\t<IonMenuButton/>\r\n\t\t\t</IonButtons>\r\n\t\t</IonToolbar>\r\n\t</IonHeader>;\r\n};\r\n\r\nexport default Header;\r\n","import { IonContent, IonInput, IonItem, IonLabel, IonList, IonPage } from '@ionic/react';\r\nimport { useParams } from 'react-router';\r\nimport './Page.scss';\r\nimport Header from '../components/Header';\r\nimport React from 'react';\r\nimport useGlobalState from '../hooks/globalState';\r\nimport GLOBAL_STATE_IDENTIFIER from '../enums/globalStateIdentifier';\r\n\r\nconst Page: React.FC = () => {\r\n\t\r\n\tconst { name } = useParams<{ name: string; }>();\r\n\tconst [ username, setUsername ] = useGlobalState<string>(GLOBAL_STATE_IDENTIFIER.USERNAME, '');\r\n\tconst [ token, setToken ] = useGlobalState<string>(GLOBAL_STATE_IDENTIFIER.TOKEN, '');\r\n\treturn (\r\n\t\t<IonPage>\r\n\t\t\t<Header title='Settings'/>\r\n\t\t\t\r\n\t\t\t<IonContent>\r\n\t\t\t\t<p>This is the settings page!</p>\r\n\t\t\t\t<IonList>\r\n\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t<IonLabel position='floating'>Username</IonLabel>\r\n\t\t\t\t\t\t<IonInput name='username' value={ username } onIonChange={ evt => setUsername(evt.detail.value ?? '') }/>\r\n\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t<IonItem>\r\n\t\t\t\t\t\t<IonLabel position='floating'>Token</IonLabel>\r\n\t\t\t\t\t\t<IonInput type='password' name='token' value={ token } onIonChange={ evt => setToken(evt.detail.value ?? '') }/>\r\n\t\t\t\t\t</IonItem>\r\n\t\t\t\t</IonList>\r\n\t\t\t</IonContent>\r\n\t\t</IonPage>\r\n\t);\r\n};\r\n\r\nexport default Page;\r\n","import React, { FC, ReactNode, Suspense, useEffect, useRef, useState } from 'react';\r\nimport { Canvas, extend, useFrame, useLoader, useThree } from '@react-three/fiber';\r\nimport * as THREE from 'three';\r\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader';\r\nimport { Html, OrbitControls, useProgress } from '@react-three/drei';\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\r\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass';\r\n\r\nimport './DinoCanvas.scss';\r\n\r\nextend({ EffectComposer, RenderPass, UnrealBloomPass });\r\n\r\nfunction Loader() {\r\n\tconst { progress } = useProgress();\r\n\treturn <Html center>{ progress } % loaded</Html>;\r\n}\r\n\r\nfunction Dino(props: JSX.IntrinsicElements['mesh']) {\r\n\tconst geom = useLoader(FBXLoader, 'dino.fbx');\r\n\tconst ref = useRef<THREE.Mesh>(null!);\r\n\tconst [ hovered, hover ] = useState(false);\r\n\t// useFrame((state, delta) => (ref.current.rotation.y += 0.005));\r\n\treturn (\r\n\t\t<mesh\r\n\t\t\t{ ...props }\r\n\t\t\tref={ ref }\r\n\t\t\tscale={ 0.0008 }\r\n\t\t\tonPointerOver={ (event) => hover(true) }\r\n\t\t\tonPointerOut={ (event) => hover(false) }>\r\n\t\t\t<primitive object={ geom }/>\r\n\t\t\t{/*<boxGeometry args={ [ 1, 1, 1 ] }/>*/ }\r\n\t\t\t<meshPhongMaterial color='green' opacity={ 0.1 } transparent/>\r\n\t\t</mesh>\r\n\t);\r\n}\r\n\r\nfunction deg2rad(deg: number) {\r\n\treturn deg * (Math.PI / 180);\r\n}\r\n\r\nconst Bloom: FC<{ active?: boolean }> = ({ children, active }) => {\r\n\tconst { gl, camera, size } = useThree();\r\n\tconst [ scene, setScene ] = useState();\r\n\tconst composer = useRef<ReactNode>(null);\r\n\t// @ts-ignore\r\n\tuseEffect(() => void scene && composer.current?.setSize(size.width, size.height), [ size ]);\r\n\t// @ts-ignore\r\n\tuseFrame(() => scene && composer.current?.render(), 1);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/*@ts-ignore*/ }\r\n\t\t\t<scene ref={ setScene }>{ children }</scene>\r\n\t\t\t<effectComposer ref={ composer } args={ [ gl ] }>\r\n\t\t\t\t<renderPass attachArray='passes' scene={ scene } camera={ camera }/>\r\n\t\t\t\t{/*@ts-ignore*/ }\r\n\t\t\t\t<unrealBloomPass attachArray='passes' args={ [ undefined, 1.5, 1, 0 ] }/>\r\n\t\t\t</effectComposer>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst DinoCanvasContent: React.FC = () => {\r\n\t\r\n\tuseThree(({ camera }) => {\r\n\t\tcamera.rotation.set(deg2rad(-35), 0, 0);\r\n\t\tcamera.position.set(0, 2, 5);\r\n\t});\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ambientLight/>\r\n\t\t\t<pointLight position={ [ 10, 10, 10 ] }/>\r\n\t\t\t{/*<pointLight position={ [ 0, 0, 0 ] } color={ 'red' } intensity={ 10 }/>*/ }\r\n\t\t\t{/*<mesh position={ [ 0, 0, 0 ] }>*/ }\r\n\t\t\t{/*\t<boxGeometry args={ [ .1, .1, .1 ] }/>*/ }\r\n\t\t\t{/*\t<meshStandardMaterial color={ 'hotpink' }/>*/ }\r\n\t\t\t{/*</mesh>*/ }\r\n\t\t\t<Dino position={ [ 0, -2, 0 ] }/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst DinoCanvas: React.FC = () => {\r\n\t\r\n\treturn (\r\n\t\t<Canvas style={ { height: 'min(40vh, 500px)' } } linear id={ 'dino-canvas' }>\r\n\t\t\t<Suspense fallback={ <Loader/> }>\r\n\t\t\t\t<Bloom>\r\n\t\t\t\t\t<DinoCanvasContent/>\r\n\t\t\t\t</Bloom>\r\n\t\t\t\t<OrbitControls autoRotate enableZoom={ false } enablePan={ false }/>\r\n\t\t\t</Suspense>\r\n\t\t</Canvas>\r\n\t);\r\n};\r\n\r\nexport default DinoCanvas;\r\n","enum MODE_TYPE {\r\n\tCOLOR = 'COLOR',\r\n\tNUMBER = 'NUMBER'\r\n}\r\n\r\nexport default MODE_TYPE;\r\n","import { IonButton, IonItem, IonLabel } from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Mode, { ModeParam } from '../types/mode';\r\n\r\nimport 'swiper/swiper-bundle.min.css';\r\nimport 'swiper/swiper.min.css';\r\nimport './DinoSlides.scss';\r\nimport { useWebsocket } from '../hooks/websocketHooks';\r\nimport ACTION_TYPE from '../enums/actionType';\r\nimport MODE_TYPE from '../enums/modeType';\r\n\r\n\r\nexport const DinoSlide: React.FC<{ mode: Mode }> = ({ mode: m }) => {\r\n\tconst [ _, setMode ] = useWebsocket<Mode>(ACTION_TYPE.SET_MODE);\r\n\tconst [ params, setParams ] = useState<[ string, ModeParam ][]>([]);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tsetParams(Object.keys(m.params).map(key => [ key, m.params[key] ]));\r\n\t}, [ m ]);\r\n\t\r\n\tconst renderParam = (paramId: string, param: ModeParam) => {\r\n\t\treturn (\r\n\t\t\t<IonItem key={ paramId }>\r\n\t\t\t\t<IonLabel>{ param.name }</IonLabel>\r\n\t\t\t\t<input type={ param.type === MODE_TYPE.NUMBER ? 'number' : 'color' } value={ param.value ?? param.defaultValue } onChange={ val => {\r\n\t\t\t\t\tsetParams(current => current.map(([ key, param ]) => key === paramId ? [ key, { ...param, value: val.target.value } ] : [ key, param ]));\r\n\t\t\t\t} }/>\r\n\t\t\t</IonItem>\r\n\t\t);\r\n\t};\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>{ m.name }</h1>\r\n\t\t\t<p>{ m.description }</p>\r\n\t\t\t{ params.map(([ key, param ]) => renderParam(key, param)) }\r\n\t\t\t<IonButton onClick={ () => setMode({ newMode: { ...m, params: params.reduce((prev: any, [ key, value ]) => prev[key] = value, {}) } }) }>Apply</IonButton>\r\n\t\t</>\r\n\t);\r\n};\r\n","import { IonButton, IonItem, IonLabel } from '@ionic/react';\r\nimport React from 'react';\r\nimport useGlobalState from '../hooks/globalState';\r\nimport Mode, { ModeParam } from '../types/mode';\r\nimport GLOBAL_STATE_IDENTIFIER from '../enums/globalStateIdentifier';\r\n\r\nimport { Swiper, SwiperSlide } from 'swiper/react/swiper-react';\r\nimport SwiperCore, { Navigation, Pagination } from 'swiper';\r\n\r\nimport 'swiper/swiper-bundle.min.css';\r\nimport 'swiper/swiper.min.css';\r\nimport './DinoSlides.scss';\r\nimport { useWebsocket } from '../hooks/websocketHooks';\r\nimport ACTION_TYPE from '../enums/actionType';\r\nimport MODE_TYPE from '../enums/modeType';\r\nimport { DinoSlide } from './DinoSlide';\r\n\r\nSwiperCore.use([ Navigation, Pagination ]);\r\n\r\nexport function DinoSlides() {\r\n\tconst [ modes ] = useGlobalState<Mode[]>(GLOBAL_STATE_IDENTIFIER.AVAILABLE_MODES);\r\n\tconst [ mode, setMode ] = useWebsocket<Mode>(ACTION_TYPE.SET_MODE);\r\n\t\r\n\tconst renderParam = (paramId: string, param: ModeParam) => {\r\n\t\treturn (\r\n\t\t\t<IonItem key={ paramId }>\r\n\t\t\t\t<IonLabel>{ param.name }</IonLabel>\r\n\t\t\t\t<input type={ param.type === MODE_TYPE.NUMBER ? 'number' : 'color' } value={ param.value ?? param.defaultValue }/>\r\n\t\t\t</IonItem>\r\n\t\t);\r\n\t};\r\n\t\r\n\tconst getSlideFromMode = (m: Mode) =>\r\n\t\t(<SwiperSlide key={ m.type }>\r\n\t\t\t<h1>{ m.name }</h1>\r\n\t\t\t<p>{ m.description }</p>\r\n\t\t\t{ Object.keys(m.params).map(key => renderParam(key, m.params[key])) }\r\n\t\t\t<IonButton onClick={ () => setMode({ newMode: m }) }>Apply</IonButton>\r\n\t\t</SwiperSlide>);\r\n\t\r\n\treturn (\r\n\t\t<Swiper\r\n\t\t\tspaceBetween={ 50 }\r\n\t\t\tloop\r\n\t\t\tnavigation\r\n\t\t\tpagination\r\n\t\t\tid='dino-slides'\r\n\t\t>\r\n\t\t\t{ modes?.map(m => <SwiperSlide key={ m.type }><DinoSlide key={ m.type } mode={ m }/></SwiperSlide>) }\r\n\t\t</Swiper>\r\n\t);\r\n}\r\n","import { IonContent, IonPage } from '@ionic/react';\r\nimport './Page.scss';\r\nimport Header from '../components/Header';\r\nimport React from 'react';\r\nimport DinoCanvas from '../components/DinoCanvas';\r\nimport { DinoSlides } from '../components/DinoSlides';\r\n\r\n// Optional parameters to pass to the swiper instance.\r\n// See http://idangero.us/swiper/api/ for valid options.\r\nconst slideOpts = {\r\n\tspeed: 400,\r\n\tloop: true\r\n};\r\n\r\nconst Page: React.FC = () => {\r\n\t\r\n\treturn (\r\n\t\t<IonPage>\r\n\t\t\t<Header title='Dino 🦕'/>\r\n\t\t\t\r\n\t\t\t<IonContent>\r\n\t\t\t\t<DinoCanvas/>\r\n\t\t\t\t<h1 style={ { textAlign: 'center' } }>Mein geiler Dino!</h1>\r\n\t\t\t\t<DinoSlides/>\r\n\t\t\t</IonContent>\r\n\t\t</IonPage>\r\n\t);\r\n};\r\n\r\nexport default Page;\r\n","import { IonToast } from '@ionic/react';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useWebsocket } from '../hooks/websocketHooks';\r\nimport ACTION_TYPE from '../enums/actionType';\r\nimport './Header.scss';\r\nimport IntroductionAction from '../types/introductionAction';\r\n\r\ninterface Props {\r\n}\r\n\r\nconst Greeting: React.FC<Props> = () => {\r\n\tconst [ action ] = useWebsocket<IntroductionAction>(ACTION_TYPE.INTRODUCTION);\r\n\tconst [ toastVisible, setToastVisible ] = useState<string>();\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (action?.origin /*&& action.origin.toLowerCase() !== 'server'*/) {\r\n\t\t\tsetToastVisible(`${ action?.args.name ?? 'A new device' } connected!`);\r\n\t\t\t\r\n\t\t\tsetTimeout(() => setToastVisible(undefined), 4000);\r\n\t\t}\r\n\t}, [ action ]);\r\n\t\r\n\treturn <IonToast isOpen={ !!toastVisible } color='success' message={ toastVisible }/>;\r\n};\r\n\r\nexport default Greeting;\r\n","import { IonContent, IonIcon, IonItem, IonLabel, IonList, IonListHeader, IonMenu, IonMenuToggle, IonNote } from '@ionic/react';\r\n\r\nimport { useLocation } from 'react-router-dom';\r\nimport { bookmarkOutline, cogOutline, cogSharp, homeOutline, homeSharp } from 'ionicons/icons';\r\nimport './Menu.scss';\r\n\r\ninterface AppPage {\r\n\turl: string;\r\n\tiosIcon: string;\r\n\tmdIcon: string;\r\n\ttitle: string;\r\n}\r\n\r\nconst appPages: AppPage[] = [\r\n\t{\r\n\t\ttitle: 'Manage Dinos',\r\n\t\turl: '/',\r\n\t\tiosIcon: homeOutline,\r\n\t\tmdIcon: homeSharp\r\n\t},\r\n\t{\r\n\t\ttitle: 'Settings',\r\n\t\turl: '/Settings',\r\n\t\tiosIcon: cogOutline,\r\n\t\tmdIcon: cogSharp\r\n\t}\r\n];\r\n\r\nconst Menu: React.FC = () => {\r\n\tconst location = useLocation();\r\n\t\r\n\treturn (\r\n\t\t<IonMenu contentId='main' type='reveal' side='end'>\r\n\t\t\t<IonContent>\r\n\t\t\t\t<IonList id='menu-list'>\r\n\t\t\t\t\t<IonListHeader>DinoAPP</IonListHeader>\r\n\t\t\t\t\t<IonNote>Control your dinos from everywhere 🎉</IonNote>\r\n\t\t\t\t\t{ appPages.map((appPage, index) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<IonMenuToggle key={ index } autoHide={ false }>\r\n\t\t\t\t\t\t\t\t<IonItem className={ location.pathname === appPage.url ? 'selected' : '' } routerLink={ appPage.url } routerDirection='none' lines='none' detail={ false }>\r\n\t\t\t\t\t\t\t\t\t<IonIcon slot='start' ios={ appPage.iosIcon } md={ appPage.mdIcon }/>\r\n\t\t\t\t\t\t\t\t\t<IonLabel>{ appPage.title }</IonLabel>\r\n\t\t\t\t\t\t\t\t</IonItem>\r\n\t\t\t\t\t\t\t</IonMenuToggle>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}) }\r\n\t\t\t\t</IonList>\r\n\t\t\t</IonContent>\r\n\t\t</IonMenu>\r\n\t);\r\n};\r\n\r\nexport default Menu;\r\n","import { IonApp, IonRouterOutlet, IonSplitPane, setupIonicReact } from '@ionic/react';\r\nimport { IonReactRouter } from '@ionic/react-router';\r\nimport { Route } from 'react-router-dom';\r\nimport Settings from './pages/Settings';\r\nimport Dino from './pages/Dino';\r\nimport Greeting from './components/Greeting';\r\nimport React from 'react';\r\nimport Menu from './components/Menu';\r\n\r\n/* Core CSS required for Ionic components to work properly */\r\nimport '@ionic/react/css/core.css';\r\n\r\n/* Basic CSS for apps built with Ionic */\r\nimport '@ionic/react/css/normalize.css';\r\nimport '@ionic/react/css/structure.css';\r\nimport '@ionic/react/css/typography.css';\r\n\r\n/* Optional CSS utils that can be commented out */\r\nimport '@ionic/react/css/padding.css';\r\nimport '@ionic/react/css/float-elements.css';\r\nimport '@ionic/react/css/text-alignment.css';\r\nimport '@ionic/react/css/text-transformation.css';\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '@ionic/react/css/display.css';\r\n\r\n/* Theme variables */\r\nimport './theme/variables.scss';\r\n\r\nsetupIonicReact({\r\n\r\n});\r\n\r\nconst App: React.FC = () => {\r\n\treturn (\r\n\t\t<IonApp>\r\n\t\t\t<IonReactRouter>\r\n\t\t\t\t<IonSplitPane contentId='main'>\r\n\t\t\t\t\t<Menu/>\r\n\t\t\t\t\t<IonRouterOutlet id='main'>\r\n\t\t\t\t\t\t<Route path='/' exact={ true }>\r\n\t\t\t\t\t\t\t<Dino/>\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path='/Settings' exact={ true }>\r\n\t\t\t\t\t\t\t<Settings/>\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t</IonRouterOutlet>\r\n\t\t\t\t</IonSplitPane>\r\n\t\t\t</IonReactRouter>\r\n\t\t\t<Greeting/>\r\n\t\t</IonApp>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 78;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 79;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t109,\n\t\t12\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 80;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}